import "./resultInvest.css";
import CsideMenu from "../../components/Csidemenu";
import Cnavbar from "../../components/Cnavbar";
import { useLocation } from 'react-router-dom';
import { useEffect, useState } from "react";
import axios from "axios";

import {
    PieChart,
    Pie,
    Cell,
    Tooltip,
    BarChart,
    Bar,
    XAxis,
    YAxis,
    Legend,
    ResponsiveContainer,
} from "recharts";

const COLORS = ["#0088FE", "#00C49F", "#FFBB28"];
const TAUX_ACTUALISATION = 10;

const ResultInvest = () => {
    const location = useLocation();
    const projetId = location.state?.projetId; // üëà r√©cup√®re le projet ID envoy√© via navigate()
    const [equipement, setEquipement] = useState(null);
    const [cashflowsParsed, setCashflowsParsed] = useState([]);

    useEffect(() => {
        if (projetId) {
            axios.get(`http://localhost:8000/equipements/${projetId}`)
                .then(response => {
                    setEquipement(response.data);

                    try {
                        const cashflows = JSON.parse(response.data.cashflows);
                        const formatted = cashflows.map((value, index) => ({
                            name: `Ann√©e ${index + 1}`,
                            ROI: Number(value)
                        })).filter(obj => !isNaN(obj.ROI)); // Filtrer NaN
                        setCashflowsParsed(formatted);
                    } catch (err) {
                        console.error("Erreur parsing cashflows :", err);
                    }
                })
                .catch(error => {
                    console.error("Erreur lors de la r√©cup√©ration de l'√©quipement :", error);
                });
        } else {
            console.warn("Aucun projetId fourni √† la page ResultInvest.");
        }
    }, [projetId]);

    const getTextColor = (condition) => (condition ? "green" : "red");

    return (
        <div className="list">
            <CsideMenu />
            <div className="listContainer">
                <Cnavbar />
                <div className="maindiv">
                    <p className="title">Analyse de rentabilit√© du projet</p>

                    {equipement && (
                        <div className="infoBloc">
                            <p><strong>Nom du projet :</strong> {equipement.nom_projet}</p>
                            <p><strong>Description :</strong> {equipement.description}</p>
                            <p><strong>Date de d√©but :</strong> {equipement.date_debut}</p>
                            <p><strong>Montant de l'investissement :</strong> {equipement.investissement} ‚Ç¨</p>
                        </div>
                    )}

                    {/* Graphiques */}
                    <div className="chartFlex">
                        <div className="chartBox">
                            <h3>R√©partition budg√©taire (exemple)</h3>
                            <ResponsiveContainer width="100%" height={250}>
                                <PieChart>
                                    <Pie
                                        data={[
                                            { name: "Marketing", value: 300 },
                                            { name: "D√©veloppement", value: 500 },
                                            { name: "Op√©rations", value: 200 }
                                        ]}
                                        dataKey="value"
                                        nameKey="name"
                                        cx="50%"
                                        cy="50%"
                                        outerRadius={80}
                                        label
                                    >
                                        {COLORS.map((color, index) => (
                                            <Cell key={`cell-${index}`} fill={color} />
                                        ))}
                                    </Pie>
                                    <Tooltip />
                                </PieChart>
                            </ResponsiveContainer>
                        </div>

                        <div className="chartBox">
                            <h3>√âvolution des cashflows annuels</h3>
                            <ResponsiveContainer width="100%" height={250}>
                                <BarChart data={cashflowsParsed}>
                                    <XAxis dataKey="name" />
                                    <YAxis />
                                    <Tooltip />
                                    <Legend />
                                    <Bar dataKey="ROI" fill="#4ade80" />
                                </BarChart>
                            </ResponsiveContainer>
                        </div>
                    </div>

                   {/* R√©sultats d'analyse */}
{equipement && (
    <div className="resultatFlex">
        <div className="resultBox">
            <h4>Valeur Actuelle Nette (VAN)</h4>
            <p style={{ color: getTextColor(equipement.van > 0) }}>
                VAN = {equipement.van} ‚Ç¨ ‚Äî {equipement.van > 0
                    ? "‚úÖ VAN > 0 : Le projet est rentable."
                    : "‚ùå VAN < 0 : Le projet risque de d√©truire de la valeur."}
            </p>
            <p>
                La VAN permet de savoir si les flux de tr√©sorerie futurs actualis√©s couvrent l'investissement initial.
            </p>
        </div>

        <div className="resultBox">
            <h4>Taux de Rendement Interne (TRI)</h4>
            <p style={{ color: getTextColor(equipement.tri > TAUX_ACTUALISATION) }}>
                TRI = {equipement.tri}% ‚Äî {equipement.tri > TAUX_ACTUALISATION
                    ? `‚úÖ TRI > ${TAUX_ACTUALISATION}% : Rentable.`
                    : `‚ùå TRI < ${TAUX_ACTUALISATION}% : Non rentable.`}
            </p>
            <p>
                Le TRI repr√©sente la rentabilit√© r√©elle du projet. Plus il est √©lev√©, plus le projet est attractif.
            </p>
        </div>
    </div>
)}

{equipement && (
    <div className="resultatFlex">
        <div className="resultBox">
            <h4>D√©lai de r√©cup√©ration</h4>
            <p style={{ color: getTextColor(equipement.delai_recup <= 3) }}>
                D√©lai = {equipement.delai_recup} ans ‚Äî {equipement.delai_recup <= 3
                    ? "‚è±Ô∏è ‚â§ 3 ans : r√©cup√©ration rapide."
                    : "‚ö†Ô∏è > 3 ans : r√©cup√©ration lente."}
            </p>
            <p>
                Ce d√©lai permet d'√©valuer √† quelle vitesse l'investissement initial est couvert par les retours g√©n√©r√©s.
            </p>
        </div>

        <div className="resultBox">
            <h4>Benefit-Cost Ratio (BCR)</h4>
            <p style={{ color: getTextColor(equipement.rbc > 1) }}>
                BCR = {equipement.rbc} ‚Äî {equipement.rbc > 1
                    ? "‚úÖ BCR > 1 : Projet rentable."
                    : "‚ùå BCR < 1 : Projet non rentable."}
            </p>
            <p>
                Le BCR compare les b√©n√©fices actualis√©s aux co√ªts pour juger de la viabilit√© √©conomique.
            </p>
        </div>
    </div>
)}

                </div>
            </div>
        </div>
    );
};

export default ResultInvest;

// import "./resultInvest.css";
// import CsideMenu from "../../components/Csidemenu";
// import Cnavbar from "../../components/Cnavbar";
// import { useLocation } from 'react-router-dom';
// import { useEffect, useState } from "react";
// import axios from "axios";

// import {
//     PieChart,
//     Pie,
//     Cell,
//     Tooltip,
//     BarChart,
//     Bar,
//     XAxis,
//     YAxis,
//     Legend,
//     ResponsiveContainer,
// } from "recharts";

// const COLORS = ["#0088FE", "#00C49F", "#FFBB28"];
// const TAUX_ACTUALISATION = 10;

// const ResultInvest = () => {
//     const location = useLocation();
//     const projetId = location.state?.projetId;
//     const [equipement, setEquipement] = useState(null);
//     const [cashflowsParsed, setCashflowsParsed] = useState([]);

//     useEffect(() => {
//         if (projetId) {
//             axios.get(`http://localhost:8000/equipements/${projetId}`)
//                 .then(response => {
//                     setEquipement(response.data);
//                     try {
//                         const cashflows = JSON.parse(response.data.cashflows);
//                         const formatted = cashflows.map((value, index) => ({
//                             name: `Ann√©e ${index + 1}`,
//                             ROI: Number(value)
//                         })).filter(obj => !isNaN(obj.ROI)); // Pour √©viter NaN
//                         setCashflowsParsed(formatted);
//                     } catch (err) {
//                         console.error("Erreur parsing cashflows :", err);
//                     }
//                 })
//                 .catch(error => {
//                     console.error("Erreur lors de la r√©cup√©ration de l'√©quipement :", error);
//                 });
//         }
//     }, [projetId]);

//     const getTextColor = (condition) => (condition ? "green" : "red");

//     return (
//         <div className="list">
//             <CsideMenu />
//             <div className="listContainer">
//                 <Cnavbar />
//                 <div className="maindiv">
//                     <p className="title">Analyse de rentabilit√© du projet</p>

//                     {equipement && (
//                         <div className="infoBloc">
//                             <p><strong>Nom du projet :</strong> {equipement.nom_projet}</p>
//                             <p><strong>Description :</strong> {equipement.description}</p>
//                             <p><strong>Date de d√©but :</strong> {equipement.date_debut}</p>
//                             <p><strong>Montant de l'investissement :</strong> {equipement.investissement} ‚Ç¨</p>
//                         </div>
//                     )}

//                     {/* Graphiques */}
//                     <div className="chartFlex">
//                         <div className="chartBox">
//                             <h3>R√©partition budg√©taire (exemple)</h3>
//                             <ResponsiveContainer width="100%" height={250}>
//                                 <PieChart>
//                                     <Pie
//                                         data={[
//                                             { name: "Marketing", value: 300 },
//                                             { name: "D√©veloppement", value: 500 },
//                                             { name: "Op√©rations", value: 200 }
//                                         ]}
//                                         dataKey="value"
//                                         nameKey="name"
//                                         cx="50%"
//                                         cy="50%"
//                                         outerRadius={80}
//                                         label
//                                     >
//                                         {COLORS.map((color, index) => (
//                                             <Cell key={`cell-${index}`} fill={color} />
//                                         ))}
//                                     </Pie>
//                                     <Tooltip />
//                                 </PieChart>
//                             </ResponsiveContainer>
//                         </div>

//                         <div className="chartBox">
//                             <h3>√âvolution des cashflows annuels</h3>
//                             <ResponsiveContainer width="100%" height={250}>
//                                 <BarChart data={cashflowsParsed}>
//                                     <XAxis dataKey="name" />
//                                     <YAxis />
//                                     <Tooltip />
//                                     <Legend />
//                                     <Bar dataKey="ROI" fill="#4ade80" />
//                                 </BarChart>
//                             </ResponsiveContainer>
//                         </div>
//                     </div>

//                     {/* R√©sultats : VAN & TRI */}
//                     {equipement && (
//                         <div className="resultatFlex">
//                             <div className="resultBox">
//                                 <h4>Valeur Actuelle Nette (VAN)</h4>
//                                 <p style={{ color: getTextColor(equipement.van > 0) }}>
//                                     {equipement.van > 0
//                                         ? "‚úÖ Le projet est rentable avec une VAN positive."
//                                         : "‚ùå VAN n√©gative : le projet risque de d√©truire de la valeur."}
//                                 </p>
//                                 <p>
//                                     La VAN permet de savoir si les flux de tr√©sorerie futurs actualis√©s couvrent l'investissement initial.
//                                 </p>
//                             </div>

//                             <div className="resultBox">
//                                 <h4>Taux de Rendement Interne (TRI)</h4>
//                                 <p style={{ color: getTextColor(equipement.tri > TAUX_ACTUALISATION) }}>
//                                     {equipement.tri > TAUX_ACTUALISATION
//                                         ? `‚úÖ TRI de ${equipement.tri} % sup√©rieur au taux d‚Äôactualisation (${TAUX_ACTUALISATION}%)`
//                                         : `‚ùå TRI inf√©rieur au seuil de rentabilit√© de ${TAUX_ACTUALISATION}%`}
//                                 </p>
//                                 <p>
//                                     Le TRI repr√©sente la rentabilit√© r√©elle du projet. Plus il est √©lev√©, plus le projet est attractif.
//                                 </p>
//                             </div>
//                         </div>
//                     )}

//                     {/* R√©sultats : D√©lai & BCR */}
//                     {equipement && (
//                         <div className="resultatFlex">
//                             <div className="resultBox">
//                                 <h4>D√©lai de r√©cup√©ration</h4>
//                                 <p style={{ color: getTextColor(equipement.delai_recup <= 3) }}>
//                                     {equipement.delai_recup <= 3
//                                         ? "‚è±Ô∏è D√©lai raisonnable : r√©cup√©ration en moins de 3 ans."
//                                         : "‚ö†Ô∏è R√©cup√©ration lente : au-del√† de 3 ans."}
//                                 </p>
//                                 <p>
//                                     Ce d√©lai permet d'√©valuer √† quelle vitesse l'investissement initial est couvert par les retours g√©n√©r√©s.
//                                 </p>
//                             </div>

//                             <div className="resultBox">
//                                 <h4>Benefit-Cost Ratio (BCR)</h4>
//                                 <p style={{ color: getTextColor(equipement.rbc > 1) }}>
//                                     {equipement.rbc > 1
//                                         ? "‚úÖ Rentable : les b√©n√©fices d√©passent les co√ªts (BCR > 1)"
//                                         : "‚ùå Non rentable : les co√ªts surpassent les gains (BCR < 1)"}
//                                 </p>
//                                 <p>
//                                     Le BCR est un indicateur synth√©tique qui mesure l'efficacit√© √©conomique du projet.
//                                 </p>
//                             </div>
//                         </div>
//                     )}

//                     {/* Interpr√©tation g√©n√©rale */}
//                     <div className="interpretationFlex">
//                         <div className="interpretationBox">
//                             <h4>Analyse strat√©gique</h4>
//                             <p>
//                                 Les r√©sultats montrent une bonne rentabilit√© globale. Le TRI d√©passe le taux d‚Äôactualisation et le d√©lai de r√©cup√©ration est raisonnable.
//                             </p>
//                         </div>
//                         <div className="interpretationBox">
//                             <h4>Recommandation</h4>
//                             <p>
//                                 Au vu des indicateurs, le projet semble viable √©conomiquement. Il est recommand√© de valider ce projet tout en suivant les cashflows de pr√®s.
//                             </p>
//                         </div>
//                     </div>
//                 </div>
//             </div>
//         </div>
//     );
// };

// export default ResultInvest;
